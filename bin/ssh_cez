#! /usr/bin/env bash

function __test_parse_cez_hostname() {
    local inputs=(
        "r5d00"             #  5: <sid:3><role:2>
        "scmd00"            #  6: <sid:4><role:2>
        "midmddb"           #  7: <sid:5><role:2>
        "n-bwpdb"           #  7: <prefix:2><sid:3><role:2>
        "c9pdb-i1"          #  8: <sid:3><role:2><suffix:3>
        "r4pdb-rs1"         #  9: <sid:3><role:2><suffix:4>
        "cassied01"         #  9: <sid:7><role:2>
        "midmtdb-01"        # 10: <sid:5><role:2><suffix:3>
        "n-ttpdb-rs1"       # 11: <prefix:2><sid:3><role:2><suffix:4>
    )

    local parsed prefix sid role suffix hostname

    for hostname in "${inputs[@]}"; do
        echo "== ${hostname} =="

        parsed="$(__parse_cez_hostname "${hostname}")"

        prefix="$(echo "${parsed}" | cut -d: -f1)"
        sid="$(echo "${parsed}" | cut -d: -f2)"
        role="$(echo "${parsed}" | cut -d: -f3)"
        suffix="$(echo "${parsed}" | cut -d: -f4)"

        [[ "${prefix}" != "" ]] && { ansi -n --bold "prefix: "; echo "${prefix}"; }
        [[ "${sid}" != "" ]] && { ansi -n --bold "sid: "; echo "${sid}"; }
        [[ "${role}" != "" ]] && { ansi -n --bold "role: "; echo "${role}"; }
        [[ "${suffix}" != "" ]] && { ansi -n --bold "suffix: "; echo "${suffix}"; }

        echo
    done
}

function __parse_cez_hostname() {
    local cez_hostname="${1}"
    local regex="^(n-)?([a-z0-9]{3,7})([a-z0-9]{2})(-[a-z0-9]{2,3})?$"

    if ! [[ "${cez_hostname}" =~ ${regex} ]]; then
        >&2 ansi --red "no match"

        return 1
    fi

    local prefix="${BASH_REMATCH[1]}"
    local sid="${BASH_REMATCH[2]}"
    local role="${BASH_REMATCH[3]}"
    local suffix="${BASH_REMATCH[4]}"

    echo -n "${prefix}:${sid}:${role}:${suffix}"
}

function __get_cez_prefix() {
    local parsed="${1}"

    echo -n "${parsed}" | cut -d: -f1
}

function __get_cez_sid() {
    local parsed="${1}"

    echo -n "${parsed}" | cut -d: -f2
}

function __get_cez_role() {
    local parsed="${1}"

    echo -n "${parsed}" | cut -d: -f3
}

function __get_cez_suffix() {
    local parsed="${1}"

    echo -n "${parsed}" | cut -d: -f4
}

function ssh_cez() {
    if [[ -z "${CEZ_USERNAME+_}" ]]; then
        >&2 echo
        >&2 ansi --bold --red "ERROR: Variable [CEZ_USERNAME] is not set."
        >&2 echo
        exit 1
    fi

    local cez_username="${CEZ_USERNAME}"
    local cez_hostname
    local cez_commands

    case ${#} in
        # ssh_cez <hostname>
        1)
            cez_hostname="${1}"
        ;;

        # ssh_cez <hostname> <command>
        # ssh_cez <username-option> <hostname>

        # ssh_cez <username-option> <hostname> <command>
        # ssh_cez -u <username> <hostname>

        # ssh_cez -u <username> <hostname> <command>
        2|3|4)
            if [[ "${1}" =~ ^-[a-z]$ ]]; then
                case "${1}" in
                    -a|-d)
                        cez_hostname="${2}"
                        cez_commands="${3}"
                    ;;

                    -u)
                        cez_hostname="${3}"
                        cez_commands="${4}"
                    ;;

                    *)
                        >&2 echo
                        >&2 ansi --bold --red "Unsupported value '${1}' for username-option."

                        return 1
                esac

                local parsed sid

                parsed="$(__parse_cez_hostname "${cez_hostname}")" || {
                    >&2 echo
                    >&2 ansi --bold --red "Cannot parse hostname."

                    return 1
                }
                sid="$(__get_cez_sid "${parsed}")"

                case "${1}" in
                    -a)
                        cez_username="${sid}adm"
                    ;;

                    -d)
                        cez_username="db2${sid}"
                    ;;

                    -u)
                        cez_username="${2}"
                    ;;

                    *)
                        >&2 echo
                        >&2 ansi --bold --red "Unsupported value '${1}' for username-option."

                        return 1
                esac
            else
                cez_hostname="${1}"
                cez_commands="${2}"
            fi
        ;;

        *)
            >&2 echo
            >&2 ansi --bold --red "${0} [-a|-d|-u <username>] <hostname> [commands] ..."

            return 1
    esac

    echo
    ansi -n --bold "username: "
    echo "${cez_username}"
    ansi -n --bold "hostname: "
    echo "${cez_hostname}"
    ansi -n --bold "command: "
    echo "${cez_commands}"
    echo
    ansi -n --bold --red "final command: "
    echo -n "ssh ${cez_username}@${cez_hostname}"
    [[ "${cez_commands}" != "" ]] && echo " \"${cez_commands}\"" || echo
    echo

    # shellcheck disable=SC2029
    ssh "${cez_username}@${cez_hostname}" "${cez_commands}"
}

ssh_cez "${@}"
